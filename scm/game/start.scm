(define-module (game start)
               #:export (main))

(use-modules (ncurses curses)
             (srfi srfi-26)
             (ice-9 match))

(use-modules (util debug)
             (util reader)
             (ninja menu))

(define (main stdscr)
  (debug "This is where we setup the game\n")
  ((@ (game start-screen) draw) stdscr) 
  (clear stdscr)
  (touchwin stdscr)
  (refresh stdscr)
  (let ((menu (make-ninja-menu "Ducking ninja!"))) 
    (debug "Setup menu\n") 
    (add-item! menu "New Game" #\n 'new-game #t) 
    (add-item! menu "Options" #\o 'show-options #f) 
    (add-item! menu "Quit" #\q 'quit #t) 
    (let redraw-loop
      ((mx   (getmaxx stdscr)) 
       (my   (getmaxy stdscr))) 
      (match (catch 'window-resize
               (λ () (do-menu menu stdscr (- my 2) (- mx 2) 1 1))
               (λ (key . args)
                  (redraw-loop (getmaxx stdscr) (getmaxy stdscr))))
        ((? (cut eq? #\n <>))
         (addstr stdscr "Start a new game!"))
        ((? (cut eq? #\q <>)) 
         (addstr stdscr "I'm leaving now!!"))
        ((? (cut eq? #\o <>))
         (addstr stdscr "Do the option screen"))
        (_ #f))))
  (let ((ch (getch stdscr)))
    (if (eq? ch #\q)
        (throw 'game-done "Nothing to do here!"))))
